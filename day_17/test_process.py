from day_17 import process


def test_3d():
    state_0_input = {
        (0, 0): """\
..#..
...#.
.###.
.....
....."""}
    state_1_input = {
        (-1, 0): """\
.....
.#...
...#.
..#..
.....""",
        (0, 0): """\
.....
.#.#.
..##.
..#..
.....""",
        (1, 0): """\
.....
.#...
...#.
..#..
.....""",
    }
    state_2_input = {
        (-2, 0): """\
.....
.....
..#..
.....
.....""",
        (-1, 0): """\
..#..
.#..#
....#
.#...
.....""",
        (0, 0): """\
##...
##...
#....
....#
.###.""",
        (1, 0): """\
..#..
.#..#
....#
.#...
.....""",
        (2, 0): """\
.....
.....
..#..
.....
.....""",
    }
    state_0 = process.PocketDimension.from_input(state_0_input)
    model = process.PocketDimensionModel(state_0, dimension_no=3)
    exp_state_inputs = [state_1_input, state_2_input]
    for exp_state_input in exp_state_inputs:
        exp_state = process.PocketDimension.from_input(exp_state_input)
        actual_state = next(model)
        assert exp_state == actual_state


def test_4d():
    state_0_input = {(0, 0): """\
..#..
...#.
.###.
.....
....."""}
    state_1_input = {
        (-1, -1): """\
.....
.#...
...#.
..#..
.....""",
        (-1, 0): """\
.....
.#...
...#.
..#..
.....""",
        (-1, 1): """\
.....
.#...
...#.
..#..
.....""",
        (0, -1): """\
.....
.#...
...#.
..#..
.....""",
        (0, 0): """\
.....
.#.#.
..##.
..#..
.....""",
        (0, 1): """\
.....
.#...
...#.
..#..
.....""",
        (1, -1): """\
.....
.#...
...#.
..#..
.....""",
        (1, 0): """\
.....
.#...
...#.
..#..
.....""",
        (1, 1): """\
.....
.#...
...#.
..#..
.....""",
    }
    state_2_input = {
        (-2, -2): """\
.....
.....
..#..
.....
.....""",
        (-2, -1): """\
.....
.....
.....
.....
.....""",
        (-2, 0): """\
###..
##.##
#...#
.#..#
.###.""",
        (-2, 1): """\
.....
.....
.....
.....
.....""",
        (-2, 2): """\
.....
.....
..#..
.....
.....""",
        (-1, -2): """\
.....
.....
.....
.....
.....""",
        (-1, -1): """\
.....
.....
.....
.....
.....""",
        (-1, 0): """\
.....
.....
.....
.....
.....""",
        (-1, 1): """\
.....
.....
.....
.....
.....""",
        (-1, 2): """\
.....
.....
.....
.....
.....""",
        (0, -2): """\
###..
##.##
#...#
.#..#
.###.""",
        (0, -1): """\
.....
.....
.....
.....
.....""",
        (0, 0): """\
.....
.....
.....
.....
.....""",
        (0, 1): """\
.....
.....
.....
.....
.....""",
        (0, 2): """\
###..
##.##
#...#
.#..#
.###.""",
        (1, -2): """\
.....
.....
.....
.....
.....""",
        (1, -1): """\
.....
.....
.....
.....
.....""",
        (1, 0): """\
.....
.....
.....
.....
.....""",
        (1, 1): """\
.....
.....
.....
.....
.....""",
        (1, 2): """\
.....
.....
.....
.....
.....""",
        (2, -2): """\
.....
.....
..#..
.....
.....""",
        (2, -1): """\
.....
.....
.....
.....
.....""",
        (2, 0): """\
###..
##.##
#...#
.#..#
.###.""",
        (2, 1): """\
.....
.....
.....
.....
.....""",
        (2, 2): """\
.....
.....
..#..
.....
.....""",
    }
    state_0 = process.PocketDimension.from_input(state_0_input)
    model = process.PocketDimensionModel(state_0, dimension_no=4)
    exp_state_inputs = [state_1_input, state_2_input]
    for exp_state_input in exp_state_inputs:
        exp_state = process.PocketDimension.from_input(exp_state_input)
        actual_state = next(model)
        assert exp_state == actual_state